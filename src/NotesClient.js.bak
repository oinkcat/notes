import Note from './Note.js';

const notesStorage = [];
let nextId = 1;

/** Get a list of all notes */
export function fetchAllNotes() {
    return new Promise((resolve, _) => {
        resolve(notesStorage);
    });
}

/** Get a note with specific id */
export function fetchNote(id) {
    return new Promise((resolve, reject) => {
        const foundNote = notesStorage.find(n => n.id === id);
        
        if(typeof foundNote !== 'undefined') {
            resolve(foundNote);
        } else {
            reject();
        }
    });
}

/** Add new note */
export function addNote(text) {
    return new Promise((resolve, _) => {
        let newNote = new Note(nextId, null, text, null);
        newNote.update();
        notesStorage.push(newNote);
    
        nextId++;

        resolve();
    });
}

/** Update existing note */
export function updateNote(id, text) {
    return new Promise((resolve, _) => {
        let noteToUpdate = notesStorage.find(n => n.id === id);
        noteToUpdate.text = text;
        noteToUpdate.update();

        resolve();
    });
}

/** Remove note with given id */
export function removeNote(id) {
    return new Promise((resolve, _) => {
        let noteToRemoveIdx = notesStorage.findIndex(n => n.id === id);
        notesStorage.splice(noteToRemoveIdx, 1);

        resolve();
    });
}

function generateTestNotes() {
    const NUM_NOTES = 10;

    for(let i = 0; i < NUM_NOTES; i++) {
        addNote(`Sample note #${i + 1}\n\nLOL Content`);
    }
}

generateTestNotes();